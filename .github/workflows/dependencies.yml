name: Dependencies

on:
  schedule:
    # Run weekly on Mondays at 8 AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Check for outdated packages
      run: |
        npm outdated --json > outdated.json || true
        if [ -s outdated.json ]; then
          echo "has_updates=true" >> $GITHUB_ENV
          echo "Outdated packages found:"
          cat outdated.json
        else
          echo "has_updates=false" >> $GITHUB_ENV
          echo "All packages are up to date"
        fi
        
    - name: Update dependencies
      if: env.has_updates == 'true'
      run: |
        # Update dev dependencies (less risky)
        npm update --save-dev
        
        # Run tests to ensure compatibility
        npm install
        npm run test
        npm run typecheck
        npm run lint
        
    - name: Create Pull Request
      if: env.has_updates == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore(deps): update development dependencies'
        title: 'chore(deps): update development dependencies'
        body: |
          ## Dependency Updates
          
          This PR updates development dependencies to their latest versions.
          
          ### Changes
          - Updated dev dependencies to latest compatible versions
          - All tests pass
          - Type checking passes
          - Linting passes
          
          ### Testing
          - [ ] CI pipeline passes
          - [ ] Manual testing completed
          - [ ] No breaking changes detected
          
          Auto-generated by GitHub Actions
        branch: chore/update-dev-dependencies
        delete-branch: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: |
        # Generate audit report
        npm audit --audit-level=moderate --json > audit-report.json || true
        
        # Check if there are high/critical vulnerabilities
        HIGH_VULNS=$(cat audit-report.json | jq '.metadata.vulnerabilities.high // 0')
        CRITICAL_VULNS=$(cat audit-report.json | jq '.metadata.vulnerabilities.critical // 0')
        
        echo "High vulnerabilities: $HIGH_VULNS"
        echo "Critical vulnerabilities: $CRITICAL_VULNS"
        
        if [ "$HIGH_VULNS" -gt 0 ] || [ "$CRITICAL_VULNS" -gt 0 ]; then
          echo "security_issues=true" >> $GITHUB_ENV
          echo "Security vulnerabilities found!"
          npm audit
        else
          echo "security_issues=false" >> $GITHUB_ENV
          echo "No high/critical security vulnerabilities found"
        fi
        
    - name: Create security issue
      if: env.security_issues == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const auditReport = JSON.parse(fs.readFileSync('audit-report.json', 'utf8'));
          
          const vulnerabilities = auditReport.metadata.vulnerabilities;
          const body = `## ðŸš¨ Security Vulnerabilities Detected
          
          **Summary:**
          - Critical: ${vulnerabilities.critical || 0}
          - High: ${vulnerabilities.high || 0}
          - Moderate: ${vulnerabilities.moderate || 0}
          - Low: ${vulnerabilities.low || 0}
          
          **Action Required:**
          1. Review the vulnerabilities by running \`npm audit\`
          2. Update affected packages: \`npm audit fix\`
          3. For vulnerabilities that can't be auto-fixed, consider:
             - Updating to a secure version
             - Finding alternative packages
             - Adding to audit exceptions if risk is acceptable
          
          **Automated Detection:**
          This issue was created automatically by the dependency security audit workflow.
          
          Run \`npm audit\` locally for detailed information.`;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Security Vulnerabilities Detected in Dependencies',
            body: body,
            labels: ['security', 'dependencies', 'priority-high']
          });