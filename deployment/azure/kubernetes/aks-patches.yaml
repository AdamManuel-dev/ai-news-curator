apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-news-curator
  namespace: ai-news-curator-prod
spec:
  template:
    spec:
      serviceAccountName: ai-news-curator
      containers:
      - name: ai-news-curator
        env:
        # Azure-specific environment variables
        - name: AZURE_REGION
          value: "eastus"
        # Enable Application Insights if configured
        - name: APPINSIGHTS_INSTRUMENTATIONKEY
          valueFrom:
            secretKeyRef:
              name: ai-news-curator-secrets
              key: appinsights-key
              optional: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        # Azure-optimized health probes
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: ai-news-curator-service
  namespace: ai-news-curator-prod
  annotations:
    # Azure Load Balancer annotations
    service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /health
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: ai-news-curator
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ai-news-curator-ingress
  namespace: ai-news-curator-prod
  annotations:
    # NGINX Ingress Controller annotations for Azure
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  tls:
  - hosts:
    - ai-content-curator.yourdomain.com
    secretName: ai-content-curator-tls
  rules:
  - host: ai-content-curator.yourdomain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ai-news-curator-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-news-curator-hpa
  namespace: ai-news-curator-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-news-curator
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-news-curator-config
  namespace: ai-news-curator-prod
data:
  # Azure-specific configuration
  AZURE_STORAGE_ACCOUNT: "aicontentcuratorstorage"
  AZURE_KEY_VAULT_URL: "https://ai-content-curator-kv.vault.azure.net/"
  # Application configuration optimized for Azure
  CACHE_TTL: "3600"
  MAX_CONNECTIONS: "100"
  WORKER_THREADS: "4" 